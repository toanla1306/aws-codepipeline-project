Description: >
    Carlos Rivas / Udacity 2019

Parameters:
  VpcId: 
    Type: String
    Description: VPC ID
  ImageId:
    Type: String
    Description: Image Id used for EC2 Instance
  InstanceType: 
    Type: String
    Description: Instance type of EC2 Instance 
  VolumeSize:
    Type: String
    Description: Size of volume 
  SubnetPublic1:
    Type: String
    Description: Public Subnet 1 ID
  SubnetPublic2:
    Type: String
    Description: Public Subnet 2 ID
  
Resources:
###################################################
##                Security Group                 ##
###################################################
  EC2SecirtyGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

####################################
##      EC2 Instance Server       ##
####################################
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref VolumeSize
            VolumeType: gp3
            DeleteOnTermination: true
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !Ref SubnetPublic1
          GroupSet:
            - !GetAtt EC2SecirtyGroup.GroupId
      IamInstanceProfile: !ImportValue IamInstanceProfileAccessS3
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum install java-11-amazon-corretto

###################################################
##    Application Load Balancer and Listener     ##
###################################################
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref SubnetPublic1
        - !Ref SubnetPublic2
      SecurityGroups:
        - Ref: EC2SecirtyGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '8080'
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref VpcId
